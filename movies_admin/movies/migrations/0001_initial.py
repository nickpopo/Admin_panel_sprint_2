# Generated by Django 3.1 on 2020-11-14 09:13

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [migrations.RunSQL(
        sql="""
        BEGIN;
        --
        -- Create model Career
        --
        CREATE TABLE IF NOT EXISTS "content"."career" (
            "id" uuid NOT NULL PRIMARY KEY,
            "name" text NOT NULL,
            "created_at" timestamp with time zone NOT NULL,
            "updated_at" timestamp with time zone NOT NULL
            );
        --
        -- Create model FilmworkType
        --
        CREATE TABLE IF NOT EXISTS "content"."filmwork_type" (
            "id" uuid NOT NULL PRIMARY KEY,
            "name" text NOT NULL,
            "created_at" timestamp with time zone NOT NULL,
            "updated_at" timestamp with time zone NOT NULL
            );
        --
        -- Create model Filmwork
        --
        CREATE TABLE IF NOT EXISTS "content"."filmwork" (
            "id" uuid NOT NULL PRIMARY KEY,
            "title" text NOT NULL,
            "description" text NOT NULL,
            "creation_date" date NULL,
            "certificate" text NOT NULL DEFAULT '',
            "file_path" text NOT NULL DEFAULT '',
            "rating" double precision NULL,
            "type_id" uuid NOT NULL REFERENCES "content"."filmwork_type" DEFERRABLE INITIALLY DEFERRED,
            "created_at" timestamp with time zone NOT NULL,
            "updated_at" timestamp with time zone NOT NULL
            );
        --
        -- Create model Genre
        --
        CREATE TABLE IF NOT EXISTS "content"."genre" (
            "id" uuid NOT NULL PRIMARY KEY,
            "name" text NOT NULL,
            "description" text NOT NULL DEFAULT '',
            "created_at" timestamp with time zone NOT NULL,
            "updated_at" timestamp with time zone NOT NULL
            );
        --
        -- Create model Person
        --
        DO $$
        BEGIN
            IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'gender') THEN
                CREATE TYPE gender AS ENUM('male', 'female', '');
            END IF;
        END $$;
        CREATE TABLE IF NOT EXISTS "content"."person" (
            "id" uuid NOT NULL PRIMARY KEY,
            "full_name" text NOT NULL,
            "birth_day" date NULL,
            "gender" gender NULL,
            "created_at" timestamp with time zone NOT NULL,
            "updated_at" timestamp with time zone NOT NULL
            );
        --
        -- Create model CareerPerson
        --
        CREATE TABLE IF NOT EXISTS "content"."careers_persons" (
            "id" uuid NOT NULL PRIMARY KEY,
            "career_id" uuid NOT NULL REFERENCES "content"."career" ON DELETE RESTRICT ON UPDATE CASCADE DEFERRABLE INITIALLY DEFERRED,
            "person_id" uuid NOT NULL REFERENCES "content"."person" ON DELETE CASCADE ON UPDATE CASCADE DEFERRABLE INITIALLY DEFERRED,
            "date_start" date NULL,
            "date_finish" date NULL,
            "created_at" timestamp with time zone NOT NULL,
            UNIQUE("person_id", "career_id")
            );
        --
        -- Create model PersonFilmwork
        --
        CREATE TABLE IF NOT EXISTS "content"."persons_filmworks" (
            "id" uuid NOT NULL PRIMARY KEY,
            "filmwork_id" uuid NOT NULL REFERENCES "content"."filmwork" ON DELETE CASCADE ON UPDATE CASCADE DEFERRABLE INITIALLY DEFERRED,
            "person_id" uuid NOT NULL REFERENCES "content"."person" ON DELETE CASCADE ON UPDATE CASCADE DEFERRABLE INITIALLY DEFERRED,
            "role_id" uuid NOT NULL REFERENCES "content"."career" ON DELETE RESTRICT ON UPDATE CASCADE DEFERRABLE INITIALLY DEFERRED,
            "created_at" timestamp with time zone NOT NULL,
            UNIQUE("filmwork_id", "person_id", "role_id")
            );
        --
        -- Add field genres to filmwork
        --
        CREATE TABLE IF NOT EXISTS "content"."genres_filmworks" (
            "id" uuid NOT NULL PRIMARY KEY,
            "genre_id" uuid NOT NULL REFERENCES "content"."genre" ON DELETE RESTRICT ON UPDATE CASCADE DEFERRABLE INITIALLY DEFERRED,
            "filmwork_id" uuid NOT NULL REFERENCES "content"."filmwork" ON DELETE CASCADE ON UPDATE CASCADE DEFERRABLE INITIALLY DEFERRED,
            "created_at" timestamp with time zone NOT NULL,
            UNIQUE("filmwork_id", "genre_id")
            );
        CREATE INDEX IF NOT EXISTS "persons_filmworks_person_id_561d0ff6" ON "content"."persons_filmworks" ("person_id");
        COMMIT;
        """,
        reverse_sql="""
        BEGIN;
        DROP TABLE "content"."career" CASCADE;
        DROP TABLE "content"."careers_persons" CASCADE;
        DROP TABLE "content"."filmwork" CASCADE;
        DROP TABLE "content"."filmwork_type" CASCADE;
        DROP TABLE "content"."genre" CASCADE;
        DROP TABLE "content"."person" CASCADE;
        DROP TABLE "content"."persons_filmworks" CASCADE;
        DROP TABLE "content"."genres_filmworks" CASCADE;
        DROP TYPE gender;
        COMMIT;
        """
    )
    ]
